name: Deploy to Amazon ECS

on:
  workflow_run:
    workflows: ["Build and Push to ECR"]
    types:
      - completed

env:
  AWS_REGION: ap-southeast-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: doggy_repo          # set this to your Amazon ECR repository name
  ECS_SERVICE: doggy-app              # set this to your Amazon ECS service name
  ECS_CLUSTER: doggy-app              # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: ecs-doggy-sandbox           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        #The task definition JSON file contains the configuration for your ECS task, including the container definitions.
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ join('', [env.ECR_REGISTRY, '/', env.ECR_REPOSITORY, ':', env.IMAGE_TAG]) }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
